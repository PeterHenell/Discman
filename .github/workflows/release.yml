name: Build and Release APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build debug APK
      run: ./gradlew assembleDebug

    - name: Build release APK
      run: ./gradlew assembleRelease

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d_%H-%M')" >> $GITHUB_OUTPUT

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.date.outputs.date }}
        release_name: Discman Release ${{ steps.date.outputs.date }}
        body: |
          Automatic release of Discman Android App
          
          ðŸ“± **Installation Instructions:**
          1. Download the `app-debug.apk` file below
          2. On your Android phone, enable "Install from Unknown Sources" in Settings
          3. Transfer the APK to your phone and tap to install
          
          ðŸŽ¯ **What's New:**
          - Latest changes from commit ${{ github.sha }}
          - Built automatically from main branch
          
          ðŸ“‹ **Files:**
          - `app-debug.apk` - Debug version (recommended for testing)
          - `app-release-unsigned.apk` - Release version (unsigned)
        draft: false
        prerelease: false

    - name: Upload Debug APK
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/debug/app-debug.apk
        asset_name: app-debug.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload Release APK
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/build/outputs/apk/release/app-release-unsigned.apk
        asset_name: app-release-unsigned.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: apk-files
        path: |
          app/build/outputs/apk/debug/app-debug.apk
          app/build/outputs/apk/release/app-release-unsigned.apk
